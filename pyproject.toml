[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hardware-data-parameter-codesign"
version = "1.0.0"
authors = [
    {name = "Yunmin Cha", email = "yunmin.cha@example.com"},
]
description = "Hardware-Data-Parameter Co-Design Framework for State Space Models"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "deep learning",
    "state space models", 
    "mamba",
    "hardware optimization",
    "parameter efficiency",
    "sparsity",
    "co-design",
    "machine learning",
    "transformers",
    "natural language processing",
]
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "datasets>=2.12.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "pyyaml>=6.0",
    "tqdm>=4.65.0",
    "wandb>=0.15.0",
    "pandas>=2.0.0",
    "accelerate>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-cov>=4.1.0",
    "black>=23.3.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
]
distributed = [
    "deepspeed>=0.9.0",
    "fairscale>=0.4.13",
]
optimization = [
    "triton>=2.0.0",
    "flash-attn>=2.0.0",
]
all = [
    "pytest>=7.3.0",
    "pytest-cov>=4.1.0", 
    "black>=23.3.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "deepspeed>=0.9.0",
    "fairscale>=0.4.13",
    "triton>=2.0.0",
    "flash-attn>=2.0.0",
]

[project.scripts]
codesign-train = "scripts.pretrain:main"
codesign-validate = "scripts.run_full_scale_validation:main"
codesign-demo = "demo_full_scale_validation:main"

[project.urls]
Homepage = "https://github.com/yunmin-cha/hardware-data-parameter-codesign"
Repository = "https://github.com/yunmin-cha/hardware-data-parameter-codesign"
Documentation = "https://github.com/yunmin-cha/hardware-data-parameter-codesign/blob/main/README.md"
"Bug Reports" = "https://github.com/yunmin-cha/hardware-data-parameter-codesign/issues"

[tool.setuptools.packages.find]
exclude = ["tests*", "experiments*", "checkpoints*", "results*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.md", "*.txt"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | checkpoints
  | experiments
  | results
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["models", "scripts", "utils", "data"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/experiments/*",
    "*/checkpoints/*",
    "*/results/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 

[tool.uv.workspace]
members = [
    "yunmin",
]
